// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SwiftPay.DAL;

#nullable disable

namespace SwiftPay.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20240402234727_TbInicial")]
    partial class TbInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.3");

            modelBuilder.Entity("SwiftPay.Models.DetallePagos", b =>
                {
                    b.Property<int>("DetallePagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoParcela")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PagoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Periodos")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Tareas")
                        .HasColumnType("REAL");

                    b.Property<string>("TipoIrrigacion")
                        .HasColumnType("TEXT");

                    b.HasKey("DetallePagoId");

                    b.ToTable("DetallePagos");
                });

            modelBuilder.Entity("SwiftPay.Models.DetalleRegante", b =>
                {
                    b.Property<int>("DetalleReganteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CodigoParcela")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ReganteId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Tareas")
                        .HasColumnType("REAL");

                    b.Property<string>("TipoIrrigacion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DetalleReganteId");

                    b.ToTable("DetalleRegantes");
                });

            modelBuilder.Entity("SwiftPay.Models.Empresa", b =>
                {
                    b.Property<int>("EmpresaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Imagen")
                        .HasColumnType("BLOB");

                    b.Property<string>("Impresora")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("NotaFactura")
                        .HasColumnType("TEXT");

                    b.Property<string>("RNC")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("EmpresaId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("SwiftPay.Models.Pagos", b =>
                {
                    b.Property<int>("PagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Devuelta")
                        .HasColumnType("REAL");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("MontoPagado")
                        .HasColumnType("REAL");

                    b.Property<float>("Recargos")
                        .HasColumnType("REAL");

                    b.Property<int>("ReganteId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("SubTotal")
                        .HasColumnType("REAL");

                    b.Property<float>("Suplementaria")
                        .HasColumnType("REAL");

                    b.HasKey("PagoId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("SwiftPay.Models.Parametros", b =>
                {
                    b.Property<int>("ParametroOperatacionalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("MontoBomba")
                        .HasColumnType("REAL");

                    b.Property<float>("MontoGravedad")
                        .HasColumnType("REAL");

                    b.Property<float>("PorcentajeRecargos")
                        .HasColumnType("REAL");

                    b.Property<int>("TiempoProximoPago")
                        .HasColumnType("INTEGER");

                    b.HasKey("ParametroOperatacionalesId");

                    b.ToTable("Parametros");
                });

            modelBuilder.Entity("SwiftPay.Models.Regantes", b =>
                {
                    b.Property<int>("ReganteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Apodo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Asociacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bloque")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CodigoRegante")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaUltimoPago")
                        .HasColumnType("TEXT");

                    b.Property<float>("MontoSuplementerio")
                        .HasColumnType("REAL");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ReganteId");

                    b.ToTable("Regantes");
                });

            modelBuilder.Entity("SwiftPay.Models.SalidaCaja", b =>
                {
                    b.Property<int>("CajaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Asunto")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("TEXT");

                    b.Property<float>("Monto")
                        .HasColumnType("REAL");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CajaId");

                    b.ToTable("SalidaCaja");
                });

            modelBuilder.Entity("SwiftPay.Models.Usuarios", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Rol")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellido = "Del Sistema",
                            Cedula = "00000000000",
                            Contrasena = "Admin12345!!",
                            CorreoElectronico = "administrador-sistema@gmail.com",
                            Direccion = "Ninguna",
                            Nombre = "Administrador",
                            Rol = "Administrador",
                            Telefono = "8090000000",
                            Usuario = "administrador"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
